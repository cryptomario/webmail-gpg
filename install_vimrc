#!/usr/bin/perl
#
# requires:	-
# input:	path of the install dir; if no input, uses current dir
# output:	-
# binds encrypt_in_place, sign_in_place, verify_in_place to the F3, F5, F6 keys in ~/.vimrc
#
use strict;
use warnings;
use Cwd;

my $dir = (@ARGV >= 1) ? $ARGV[0] : cwd();
my $usage = "usage: ./install_vimrc <dir>\n";

sub try_key_binding{
	my $key_F_num = shift;
	my $cmd       = shift;
	my $msg       = shift;
	my $binding   = '';
	if (`grep "map #$key_F_num" $ENV{HOME}/.vimrc`) {
		print "Key F$key_F_num already mapped in ~/.vimrc. Please map $dir/$cmd to a key of your choice.\n";
	} else {
		$binding = "map #$key_F_num :!$dir/$cmd %\n";
		print "Press F$key_F_num $msg.\n";
	}
	return $binding;
}

my $eip = 'encrypt_in_place';
my $sip = 'sign_in_place';
my $vip = 'verify_in_place';
die "error: dir '$dir' does not exist\n $usage" unless -d $dir;
for my $p ($eip, $sip, $vip){
	die "error: $p not found in dir '$dir'\n $usage" unless -e "$dir/$p";
}

my $key_bindings = '';
$key_bindings .= try_key_binding(3, $eip, 'before editing to write an encrypted email');
$key_bindings .= try_key_binding(5, $sip, 'after editing to sign an email');
$key_bindings .= try_key_binding(6, $vip, 'before editing to verify the signature of a signed email');
open(my $outfile, ">>", "$ENV{HOME}/.vimrc")
	or die "cannot write ~/.vimrc: $!";
	print $outfile $key_bindings if $key_bindings ne '';
close($outfile);
